// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

// enum TrailerLocation {
//   PRIMARY
//   SECONDARY
//   RVAC
//   RMAN
// }

enum RequestType {
  IN
  OUT
}

model Trailer {
  id              Int        @id @default(autoincrement())
  createdAt       DateTime   @default(now())
  updatedAt       DateTime   @updatedAt
  trailerNumber   String     @db.VarChar(255)
  carrier         String
  category        String
  trailerLocation String
  spotNumber      String
  comments        String?
  departed        Boolean    @default(false)
  Requests        Requests[]
  Spots           Spots?
}

model Requests {
  id                 Int         @id @default(autoincrement())
  createdAt          DateTime    @default(now())
  updatedAt          DateTime    @updatedAt
  inCarrier          String?
  inTrailerNumber    String?
  completed          Boolean     @default(false)
  completedTime      DateTime?
  urgent             Boolean     @default(false)
  outTrailerLocation String?
  outSpotNumber      String?
  inTrailerLocation  String?
  inSpotNumber       String?
  outTrailerNumber   String?
  outCarrier         String?
  special            String?
  outCategory        String?
  requestType        RequestType
  trailer            Trailer?    @relation(fields: [trailerId], references: [id])
  trailerId          Int
}

model Carrier {
  id          Int      @id @default(autoincrement())
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  carrierName String
}

model Category {
  id           Int      @id @default(autoincrement())
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
  categoryName String
  color        String
}

model TrailerLocation {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  name      String
  lot       Boolean? @default(false)
  lotName   String?
  dock      Boolean? @default(false)
  Spots     Spots[]
}

model Spots {
  id                Int             @id @default(autoincrement())
  createdAt         DateTime        @default(now())
  updatedAt         DateTime        @updatedAt
  name              String
  trailer           Trailer?        @relation(fields: [trailerId], references: [id])
  trailerLocation   TrailerLocation @relation(fields: [trailerLocationId], references: [id])
  trailerLocationId Int
  trailerId         Int?
  Dock              Dock?           @relation(fields: [dockId], references: [id])
  dockId            Int?
  Lot               Lot?            @relation(fields: [lotId], references: [id])
  lotId             Int?
}

model Dock {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  name      String
  View      View?    @relation(fields: [viewId], references: [id])
  viewId    Int?
  Spots     Spots[]
}

model Lot {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  name      String
  View      View?    @relation(fields: [viewId], references: [id])
  viewId    Int?
  Spots     Spots[]
}

model View {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  name      String
  Dock      Dock[]
  Lot       Lot[]
}
